// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// admm_bp
Rcpp::List admm_bp(const arma::mat& A, const arma::colvec& b, arma::colvec& xinit, const double reltol, const double abstol, const int maxiter, const double rho, const double alpha);
RcppExport SEXP _ADMM_admm_bp(SEXP ASEXP, SEXP bSEXP, SEXP xinitSEXP, SEXP reltolSEXP, SEXP abstolSEXP, SEXP maxiterSEXP, SEXP rhoSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type xinit(xinitSEXP);
    Rcpp::traits::input_parameter< const double >::type reltol(reltolSEXP);
    Rcpp::traits::input_parameter< const double >::type abstol(abstolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(admm_bp(A, b, xinit, reltol, abstol, maxiter, rho, alpha));
    return rcpp_result_gen;
END_RCPP
}
// admm_lad
Rcpp::List admm_lad(const arma::mat& A, const arma::colvec& b, arma::colvec& xinit, const double reltol, const double abstol, const int maxiter, const double rho, const double alpha);
RcppExport SEXP _ADMM_admm_lad(SEXP ASEXP, SEXP bSEXP, SEXP xinitSEXP, SEXP reltolSEXP, SEXP abstolSEXP, SEXP maxiterSEXP, SEXP rhoSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type xinit(xinitSEXP);
    Rcpp::traits::input_parameter< const double >::type reltol(reltolSEXP);
    Rcpp::traits::input_parameter< const double >::type abstol(abstolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(admm_lad(A, b, xinit, reltol, abstol, maxiter, rho, alpha));
    return rcpp_result_gen;
END_RCPP
}
// admm_lasso
Rcpp::List admm_lasso(const arma::mat& A, const arma::colvec& b, const double lambda, arma::colvec& xinit, const double reltol, const double abstol, const int maxiter, const double rho, const double alpha);
RcppExport SEXP _ADMM_admm_lasso(SEXP ASEXP, SEXP bSEXP, SEXP lambdaSEXP, SEXP xinitSEXP, SEXP reltolSEXP, SEXP abstolSEXP, SEXP maxiterSEXP, SEXP rhoSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type xinit(xinitSEXP);
    Rcpp::traits::input_parameter< const double >::type reltol(reltolSEXP);
    Rcpp::traits::input_parameter< const double >::type abstol(abstolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(admm_lasso(A, b, lambda, xinit, reltol, abstol, maxiter, rho, alpha));
    return rcpp_result_gen;
END_RCPP
}
// admm_tv
Rcpp::List admm_tv(const arma::colvec& b, arma::colvec& xinit, const double lambda, const double reltol, const double abstol, const int maxiter, const double rho, const double alpha);
RcppExport SEXP _ADMM_admm_tv(SEXP bSEXP, SEXP xinitSEXP, SEXP lambdaSEXP, SEXP reltolSEXP, SEXP abstolSEXP, SEXP maxiterSEXP, SEXP rhoSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type xinit(xinitSEXP);
    Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type reltol(reltolSEXP);
    Rcpp::traits::input_parameter< const double >::type abstol(abstolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(admm_tv(b, xinit, lambda, reltol, abstol, maxiter, rho, alpha));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ADMM_admm_bp", (DL_FUNC) &_ADMM_admm_bp, 8},
    {"_ADMM_admm_lad", (DL_FUNC) &_ADMM_admm_lad, 8},
    {"_ADMM_admm_lasso", (DL_FUNC) &_ADMM_admm_lasso, 9},
    {"_ADMM_admm_tv", (DL_FUNC) &_ADMM_admm_tv, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_ADMM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
